import{GenerateGuid}from"../helpers/strings.js";import{KeyCodes}from"../helpers/key-codes.js";class Tooltip{constructor(t){this.$module=t,this.$trigger=t.firstElementChild,this.$tooltip=t.querySelector(".fs-tooltip__tip"),this.timeoutId=null,this.timeoutLength=500,this.tooltipOriginalId=this.$tooltip.id,this.tooltipId=this.tooltipOriginalId||`tooltip-${GenerateGuid()}`,this.$trigger&&this.$tooltip&&this.create()}create(){this.$tooltip.setAttribute("id",this.tooltipId),this.$tooltip.setAttribute("aria-hidden","true"),this.$trigger.boundMouseEnter=this.onFocus.bind(this),this.$trigger.boundMouseLeave=this.onMouseLeave.bind(this),this.$trigger.boundFocus=this.onFocus.bind(this),this.$trigger.boundBlur=this.onBlur.bind(this),this.$trigger.boundEscape=this.onEscape.bind(this),this.$trigger.addEventListener("mouseenter",this.$trigger.boundMouseEnter,!0),this.$trigger.addEventListener("mouseleave",this.$trigger.boundMouseLeave,!0),this.$trigger.addEventListener("focus",this.$trigger.boundFocus,!0),this.$trigger.addEventListener("blur",this.$trigger.boundBlur,!0),this.$trigger.addEventListener("keydown",this.$trigger.boundEscape,!0),this.hideTooltip()}destroy(){this.tooltipOriginalId?this.$tooltip.setAttribute("id",this.tooltipOriginalId):this.$tooltip.removeAttribute("id"),this.$tooltip.removeAttribute("aria-hidden"),this.$trigger.removeEventListener("mouseenter",this.$trigger.boundMouseEnter,!0),this.$trigger.removeEventListener("mouseleave",this.$trigger.boundMouseLeave,!0),this.$trigger.removeEventListener("focus",this.$trigger.boundFocus,!0),this.$trigger.removeEventListener("blur",this.$trigger.boundBlur,!0),this.$trigger.removeEventListener("keydown",this.$trigger.boundEscape,!0)}onFocus(){this.showTooltip()}onBlur(){this.hideTooltip()}onEscape(t){(t.which||t.keyCode)===KeyCodes().ESCAPE&&this.hideTooltip()}onMouseEnter(){this.showTooltip(),this.timeoutId&&clearTimeout(this.timeoutId)}onMouseLeave(){this.timeoutId=setTimeout(()=>{this.hideTooltip()},this.timeoutLength)}showTooltip(){this.determinePosition(),this.$tooltip.classList.remove("fs-tooltip__tip--hidden"),this.$tooltip.setAttribute("aria-hidden","false")}hideTooltip(){this.$tooltip.classList.add("fs-tooltip__tip--hidden"),this.$tooltip.setAttribute("aria-hidden","true")}determinePosition(){var t=this.$trigger.getBoundingClientRect();const i={top:t.top,left:t.left,right:window.innerWidth-t.right,bottom:window.innerHeight-t.bottom};let e=0,o=null;Object.keys(i).map(t=>{i[t]>e&&(e=i[t],o=t)}),this.$tooltip.dataset.side=o||"bottom"}}export default Tooltip;
//# sourceMappingURL=tooltip.js.map
